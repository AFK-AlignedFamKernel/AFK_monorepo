// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("BACKEND_DATABASE_URL")
}

model registration {
  id               Int       @id @default(autoincrement())
  contract_address String?
  nickname         String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  is_confirmed     Boolean?  @default(false)
  phone_number     String?
  email            String?
  starknet_address String?
  evm_address      String?
}

model User {
  id              String          @id @default(cuid())
  useraddress     String          @unique
  email           String?         @unique
  logintype       String
  verified        Boolean?        @default(false)
  createdat       DateTime?       @default(now()) @db.Timestamp(6)
  updatedat       DateTime?       @default(now()) @db.Timestamp(6)
  social_accounts SocialAccount[]

  @@map("users")
}

model SocialAccount {
  id           String    @id @default(cuid())
  userid       String
  platform     String
  accountid    String
  username     String?
  picture      String?
  accesstoken  String?
  refreshtoken String?
  expiresat    DateTime? @db.Timestamp(6)
  createdat    DateTime? @default(now()) @db.Timestamp(6)
  updatedat    DateTime? @default(now()) @db.Timestamp(6)
  users        User      @relation(fields: [userid], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@unique([userid, platform])
  @@map("social_accounts")
}
