generator client {
  provider      = "prisma-client-js"
  output        = ".prisma/client"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("BACKEND_DATABASE_URL")
}

model registration {
  id               Int       @id @default(autoincrement())
  contract_address String?
  nickname         String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  is_confirmed     Boolean?  @default(false)
  phone_number     String?
  email            String?
  starknet_address String?
  evm_address      String?
}

model User {
  id             String          @id @default(cuid())
  email          String?         @unique
  verified       Boolean?        @default(false)
  loginType      String
  userAddress    String          @unique
  createdat      DateTime?       @default(now()) @db.Timestamp(6)
  updatedat      DateTime?       @default(now()) @db.Timestamp(6)
  socialAccounts SocialAccount[]

  @@map("users")
}

model SocialAccount {
  id           String    @id @default(cuid())
  platform     String
  username     String?
  picture      String?
  accessToken  String?
  accountId    String
  createdAt    DateTime? @default(now()) @db.Timestamp(6)
  expiresAt    DateTime? @db.Timestamp(6)
  refreshToken String?
  updatedAt    DateTime? @default(now()) @db.Timestamp(6)
  userId       String
  users        User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user")

  @@unique([userId, platform])
  @@map("social_accounts")
}
