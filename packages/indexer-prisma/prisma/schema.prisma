generator client {
  provider = "prisma-client-js"
  output   = ".prisma/client"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("INDEXER_DATABASE_URL")
}

model token_deploy {
  transaction_hash String    @id
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  memecoin_address String?
  owner_address    String?
  name             String?
  symbol           String?
  initial_supply   String?
  total_supply     String?
  cursor           BigInt?   @map("_cursor")
  time_stamp       DateTime? @db.Timestamp(6)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
}

model token_launch {
  transaction_hash   String    @id
  network            String?
  block_hash         String?
  block_number       BigInt?
  block_timestamp    DateTime? @db.Timestamp(6)
  memecoin_address   String?
  quote_token        String?
  exchange_name      String?
  total_supply       String?
  current_supply     String?
  liquidity_raised   String?
  total_token_holded String?
  price              String?
  cursor             BigInt?   @map("_cursor")
  time_stamp         DateTime? @db.Timestamp(6)
  created_at         DateTime? @default(now()) @db.Timestamp(6)
}

model unrugmeme_deploy {
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String?
  memecoin_address String    @id
  owner_address    String?
  name             String?
  symbol           String?
  initial_supply   String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  cursor           BigInt?   @map("_cursor")
}

model unrugmeme_launch {
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String?
  memecoin_address String    @id
  quote_token      String?
  exchange_name    String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  cursor           BigInt?   @map("_cursor")
}

model unrugmeme_transfers {
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String?
  transfer_id      String    @id
  from_address     String?
  to_address       String?
  memecoin_address String?
  amount           String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  cursor           BigInt?   @map("_cursor")
}

model token_transactions {
  transfer_id      String    @id
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String?
  memecoin_address String?
  owner_address    String?
  last_price       String?
  quote_amount     String?
  coin_received    String?
  initial_supply   String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  total_supply     String?
  current_supply   String?
  liquidity_raised String?
  price            String?
  protocol_fee     String?
  amount           Decimal?  @db.Decimal
  cursor           BigInt?   @map("_cursor")
  transaction_type String
  time_stamp       DateTime? @db.Timestamp(6)
}

model renew_subscription {
  owner_address    String?
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String    @id
  name             String?
  old_name         String?
  paid             String?
  quote_address    String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  cursor           BigInt?   @map("_cursor")
  time_stamp       String?
}

model username_changed {
  owner_address    String?
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String    @id
  name             String?
  old_name         String?
  paid             String?
  quote_address    String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  cursor           BigInt?   @map("_cursor")
  time_stamp       String?
}

model username_claimed {
  owner_address    String?
  network          String?
  block_hash       String?
  block_number     BigInt?
  block_timestamp  DateTime? @db.Timestamp(6)
  transaction_hash String    @id
  expiry           DateTime? @db.Timestamp(6)
  username         String?
  name             String?
  symbol           String?
  paid             String?
  quote_address    String?
  cursor           BigInt?   @map("_cursor")
  time_stamp       DateTime? @db.Timestamp(6)
  created_at       DateTime? @default(now()) @db.Timestamp(6)
}

model shares_token_user {
  id            String   @id
  owner         String
  token_address String
  amount_owned  Decimal? @default(0) @db.Decimal
}
